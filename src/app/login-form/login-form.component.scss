@mixin media($name) {
  @if map-has-key($breakpoints, $name) {
    $value: map-get($breakpoints, $name);
    $query: if(type-of($value)=="string", $value, inspect($value));

    @media #{$query} {
      @content;
    }
  }

  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
    +"Please make sure it is defined in `$breakpoints` map.";
  }
}

$size_width : 1024px;

$breakpoints: ('mobile' : "only screen and (max-width: 667px)",
  'tablet' : "only screen and (min-width: 668px) and (max-width: $size_width)",
  'desktop' : "only screen and (min-width: ($size_width+ 1))",
  'retina2' : "only screen and (-webkit-min-device-pixel-ratio: 2) and (min-resolution: 192dpi)",
  'retina3' : "only screen and (-webkit-min-device-pixel-ratio: 3) and (min-resolution: 288dpi)",
  'landscape' : "screen and (orientation:landscape)",
  'portrait' : "screen and (orientation:portrait)"
);
$color_bck: #3f51b5;
$color_thumb: #4c61d4;
$color_text_hover: rgb(232, 138, 46);
$bg_gradient_last_color: rgba(68, 127, 253, 0.295);
$bg_gradient: linear-gradient(120deg, rgba(68, 127, 253, 0.295) 0%, rgba(230, 204, 61, 0.623) 37%, $bg_gradient_last_color 94%);

:host ::ng-deep .mat-form-field {
  min-width: 30vh;
}

:host ::ng-deep .mat-form-field-prefix {
  margin-right: 1em;
}

:host ::ng-deep .mat-slide-toggle.mat-checked .mat-slide-toggle-bar,
:host ::ng-deep .mat-slide-toggle.mat-checked .mat-ripple-element {
  background-color: $color_bck;
}

:host ::ng-deep .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb {
  background-color: $color_thumb;
}

:host ::ng-deep .mat-stroked-button {
  border-radius: 2em;
  border-color: $color_bck;
  width: 50%;
  align-self: center;

  &:hover {
    background: $bg_gradient;
    border-color: $bg_gradient_last_color;
  }
}

:host ::ng-deep .mat-stroked-button.mat-primary {
  &:hover {
    color: $color_text_hover;
  }
}

.bg-img {
  min-height: 100vh;
  width: 100%;
  background-image: url("/assets/img/background.jpg");
  background-position: center;
  background-repeat: no-repeat;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;

  .container-fluid {
    padding-top: 5%;

    @include media(mobile or tablet) {
      flex-direction: row !important;
    }

    .login-card {
      background-color: white;
      min-height: 58%;
      width: 42vh;
      animation: fadein 1s ease-in-out;
      border: 5px solid black;
      border-image: url("data:image/svg+xml;charset=utf-8,%3Csvg width='100' height='100' viewBox='0 0 100 100' fill='none' xmlns='http://www.w3.org/2000/svg'%3E %3Cstyle%3Epath%7Banimation:stroke 5s infinite linear%3B%7D%40keyframes stroke%7Bto%7Bstroke-dashoffset:776%3B%7D%7D%3C/style%3E%3ClinearGradient id='g' x1='0%25' y1='0%25' x2='0%25' y2='100%25'%3E%3Cstop offset='0%25' stop-color='%232d3561' /%3E%3Cstop offset='25%25' stop-color='%23c05c7e' /%3E%3Cstop offset='50%25' stop-color='%23f3826f' /%3E%3Cstop offset='100%25' stop-color='%23ffb961' /%3E%3C/linearGradient%3E %3Cpath d='M1.5 1.5 l97 0l0 97l-97 0 l0 -97' stroke-linecap='square' stroke='url(%23g)' stroke-width='3' stroke-dasharray='388'/%3E %3C/svg%3E") 1;
    }

    .login-content {
      animation: fadein 1.5s ease-in-out;
      min-height: 58%;
      height: 58vh;

      @include media(mobile or tablet) {
        height: auto;
      }

      .login-header {
        font-weight: 500;
      }

      .remember-me {
        font-weight: 500;
        display: flex !important;
        flex-direction: row !important;
        justify-content: space-around;
        align-items: center;
      }

      .objectfit {
        width: 200px;
        height: 200px;
        overflow: hidden;
        margin: 10px;
        position: relative;
      }

      .objectfit>img {
        height: 200px;
        object-fit: cover;
      }

      .responsv-button {
        @include media(retina2) {
          margin-bottom: 1em;
        }
      }
    }
  }
}
